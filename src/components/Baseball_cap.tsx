/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/baseball_cap.glb -t -s 
Author: Scott VanArsdale (https://sketchfab.com/vanart)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/baseball-cap-1c1d34d73fd94e6b9e8f82b1eb7194a0
Title: Baseball Cap
*/

import * as THREE from "three";

import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoader } from "@react-three/fiber";
import { useUiContext } from "../context/UiContext";

type GLTFResult = GLTF & {
  nodes: {
    baseballCap: THREE.Mesh;
    baseballCap_1: THREE.Mesh;
    plastic: THREE.Mesh;
    plastic_1: THREE.Mesh;
    baseballCap_2: THREE.Mesh;
    blinn1SG: THREE.Mesh;
    baseballCap_3: THREE.Mesh;
  };
  materials: {
    baseballCap: THREE.MeshStandardMaterial;
    plastic: THREE.MeshStandardMaterial;
    blinn1SG: THREE.MeshStandardMaterial;
  };
};

export function Cap(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "./../models/baseball_cap.glb"
  ) as GLTFResult;

  const texture = useLoader(THREE.TextureLoader, [
    "./../textures/1.jpg",
    "./../textures/2.jpg",
    "./../textures/3.jpg",
    "./../textures/4.jpg",
  ]);
  const { currentTexture } = useUiContext();
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.baseballCap.geometry}
            // material={materials.baseballCap}
            position={[0.005, -2.9, -11.842]}
            rotation={[-0.161, 0, 0]}
            scale={20.118}
          >
            {currentTexture === "1.jpg" && (
              <meshStandardMaterial map={texture[0]} />
            )}
            {currentTexture === "2.jpg" && (
              <meshStandardMaterial map={texture[1]} />
            )}
            {currentTexture === "3.jpg" && (
              <meshStandardMaterial map={texture[2]} />
            )}
            {currentTexture === "4.jpg" && (
              <meshStandardMaterial map={texture[3]} />
            )}
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.baseballCap_1.geometry}
            material={materials.baseballCap}
            position={[0.005, -2.9, -11.842]}
            rotation={[-0.161, 0, 0]}
            scale={20.118}
          >
            {currentTexture === "1.jpg" && (
              <meshStandardMaterial map={texture[0]} />
            )}
            {currentTexture === "2.jpg" && (
              <meshStandardMaterial map={texture[1]} />
            )}
            {currentTexture === "3.jpg" && (
              <meshStandardMaterial map={texture[2]} />
            )}
            {currentTexture === "4.jpg" && (
              <meshStandardMaterial map={texture[3]} />
            )}
          </mesh>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.plastic.geometry}
            material={materials.plastic}
            position={[0.005, -2.9, -11.842]}
            rotation={[-0.161, 0, 0]}
            scale={20.118}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.plastic_1.geometry}
            material={materials.plastic}
            position={[0.005, -2.9, -11.842]}
            rotation={[-0.161, 0, 0]}
            scale={20.118}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.baseballCap_2.geometry}
            material={materials.baseballCap}
            position={[0.005, -2.9, -11.842]}
            rotation={[-0.161, 0, 0]}
            scale={20.118}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.blinn1SG.geometry}
            material={materials.blinn1SG}
            position={[0.005, -2.9, -11.842]}
            rotation={[-0.161, 0, 0]}
            scale={20.118}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.baseballCap_3.geometry}
            material={materials.baseballCap}
            position={[0.005, -2.9, -11.842]}
            rotation={[-0.161, 0, 0]}
            scale={20.118}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./../models/baseball_cap.glb");
