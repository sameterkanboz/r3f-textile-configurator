/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/old_cap.glb -t -s 
Author: Makovetkyi Volodymyr (https://sketchfab.com/pbr-scans)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pb51-old-cap-md-1c4511db9d6e4f4997ba054a864f927e
Title: PB51 Old Cap Md
*/

import * as THREE from "three";

import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useLoader } from "@react-three/fiber";
import { useUiContext } from "../context/UiContext";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
  };
  materials: {
    lambert2SG: THREE.MeshStandardMaterial;
  };
};

export function OldCap(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("./../models/old_cap.glb") as GLTFResult;

  const texture = useLoader(THREE.TextureLoader, [
    "./../textures/1.jpg",
    "./../textures/2.jpg",
    "./../textures/3.jpg",
    "./../textures/4.jpg",
  ]);
  const { currentTexture } = useUiContext();
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Object_2.geometry}
        position={[0.029, 2.2, 2.6]}
        scale={0.086}
        rotation={[-Math.PI / 1.1, 0, 1]}
      >
        {currentTexture === "1.jpg" && (
          <meshStandardMaterial map={texture[0]} />
        )}
        {currentTexture === "2.jpg" && (
          <meshStandardMaterial map={texture[1]} />
        )}
        {currentTexture === "3.jpg" && (
          <meshStandardMaterial map={texture[2]} />
        )}
        {currentTexture === "4.jpg" && (
          <meshStandardMaterial map={texture[3]} />
        )}
        {/* Add more conditions as needed */}
      </mesh>
    </group>
  );
}

useGLTF.preload("./../models/old_cap.glb");
